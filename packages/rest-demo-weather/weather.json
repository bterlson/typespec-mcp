{
  "openapi": "3.0.0",
  "info": {
    "title": "Open-Meteo Weather API",
    "description": "Free weather forecast API provided by Open-Meteo.com",
    "version": "1.0.0",
    "contact": {
      "name": "Open-Meteo",
      "url": "https://open-meteo.com/"
    },
    "license": {
      "name": "CC BY 4.0",
      "url": "https://creativecommons.org/licenses/by/4.0/"
    }
  },
  "servers": [
    {
      "url": "https://api.open-meteo.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/forecast": {
      "get": {
        "summary": "Get weather forecast",
        "description": "Get weather forecast for a specific location",
        "operationId": "getForecast",
        "tags": ["Weather"],
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "description": "Latitude of the location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 52.52
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Longitude of the location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float",
              "example": 13.41
            }
          },
          {
            "name": "hourly",
            "in": "query",
            "description": "List of hourly weather variables to include in the response. Set only if you need hourly forecast. Value is a comma-separated list of variables.  Example: `temperature_2m,relative_humidity_2m,precipitation`",
            "required": false,
            "schema": {
              "type": "string",
              "example": "temperature_2m,relative_humidity_2m,precipitation"
            }
          },
          {
            "name": "daily",
            "in": "query",
            "description": "List of daily weather variables to include in the response. Set only if you need daily forecast. Value is a comma-separated list of variables. Example: `temperature_2m_max,temperature_2m_min,precipitation_sum`",
            "required": false,
            "schema": {
              "type": "string",
              "example": "temperature_2m_max,temperature_2m_min,precipitation_sum"
            }
          },
          {
            "name": "current",
            "in": "query",
            "description": "List of current weather variables to include in the response. Set only if you need current weather. Value is a comma-separated list of variables. Example: `temperature_2m,relative_humidity_2m,precipitation`",
            "required": false,
            "schema": {
              "type": "string",
              "example": "temperature_2m,relative_humidity_2m,precipitation"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Time zone for the response data",
            "required": false,
            "schema": {
              "type": "string",
              "default": "GMT",
              "example": "Europe/Berlin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with forecast data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForecastResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ForecastResponse": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "float",
            "description": "Latitude of the location"
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "description": "Longitude of the location"
          },
          "generationtime_ms": {
            "type": "number",
            "format": "float",
            "description": "Generation time of the weather forecast in milliseconds"
          },
          "utc_offset_seconds": {
            "type": "integer",
            "description": "UTC offset in seconds"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone identifier"
          },
          "timezone_abbreviation": {
            "type": "string",
            "description": "Time zone abbreviation"
          },
          "elevation": {
            "type": "number",
            "description": "Elevation above sea level in meters"
          },
          "current": {
            "$ref": "#/components/schemas/WeatherData"
          },
          "current_units": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Units for current weather variables"
          },
          "hourly": {
            "$ref": "#/components/schemas/WeatherData"
          },
          "hourly_units": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Units for hourly weather variables"
          },
          "daily": {
            "$ref": "#/components/schemas/WeatherData"
          },
          "daily_units": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Units for daily weather variables"
          }
        }
      },
      "WeatherData": {
        "type": "object",
        "properties": {
          "time": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            },
            "description": "Array of dates for daily data"
          },
          "temperature_2m_max": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Maximum daily temperature at 2 meters above ground in °C"
          },
          "temperature_2m_min": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Minimum daily temperature at 2 meters above ground in °C"
          },
          "precipitation_sum": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Sum of daily precipitation in mm"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "description": "Indicates an error occurred"
          },
          "reason": {
            "type": "string",
            "description": "Error message describing what went wrong"
          }
        },
        "required": ["error", "reason"]
      }
    }
  },
  "tags": [
    {
      "name": "Weather",
      "description": "Weather forecast endpoints"
    }
  ]
}
